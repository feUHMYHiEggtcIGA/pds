#[allow(clippy::wildcard_imports)]


use std::sync::LazyLock;

use crate::types::structures::{
    SRC as SRC_T,
    SRCS as SRCS_T,
};


pub const OPEN: [f64; 50] = [
    2.2469, 2.2433, 2.2424, 2.2473, 2.2480,
    2.2501, 2.2474, 2.2501, 2.2462, 2.2516,
    2.2512, 2.2511, 2.2534, 2.2517, 2.2501,
    2.2470, 2.2448, 2.2500, 2.2522, 2.2517,
    2.2562, 2.2565, 2.2528, 2.2570, 2.2586,
    2.2597, 2.2616, 2.2564, 2.2561, 2.2627,
    2.2654, 2.2742, 2.2736, 2.2706, 2.2736,
    2.2735, 2.2733, 2.2624, 2.2618, 2.2628,
    2.2649, 2.2591, 2.2577, 2.2546, 2.2584,
    2.2555, 2.2553, 2.2559, 2.2542, 2.2547,
];
pub const HIGH: [f64; 50] = [
    2.2550, 2.2500, 2.2500, 2.2530, 2.2540,
    2.2560, 2.2540, 2.2570, 2.2530, 2.2580,
    2.2590, 2.2580, 2.2620, 2.2600, 2.2580,
    2.2550, 2.2530, 2.2570, 2.2590, 2.2580,
    2.2630, 2.2640, 2.2600, 2.2650, 2.2670,
    2.2690, 2.2700, 2.2650, 2.2640, 2.2710,
    2.2740, 2.2830, 2.2820, 2.2790, 2.2820,
    2.2810, 2.2810, 2.2700, 2.2680, 2.2700,
    2.2720, 2.2670, 2.2650, 2.2630, 2.2670,
    2.2660, 2.2650, 2.2660, 2.2650, 2.2660,
];
pub const LOW: [f64; 50] = [
    2.2400, 2.2380, 2.2355, 2.2420, 2.2410,
    2.2430, 2.2410, 2.2440, 2.2410, 2.2450,
    2.2460, 2.2450, 2.2480, 2.2460, 2.2430,
    2.2400, 2.2380, 2.2420, 2.2440, 2.2430,
    2.2500, 2.2510, 2.2460, 2.2520, 2.2530,
    2.2550, 2.2570, 2.2520, 2.2520, 2.2580,
    2.2600, 2.2690, 2.2680, 2.2640, 2.2680,
    2.2670, 2.2670, 2.2560, 2.2550, 2.2560,
    2.2580, 2.2520, 2.2500, 2.2470, 2.2500,
    2.2490, 2.2480, 2.2490, 2.2480, 2.2490,
];
pub const CLOSE: [f64; 50] = [
    2.2460, 2.2425, 2.2430, 2.2450, 2.2470,
    2.2490, 2.2480, 2.2490, 2.2450, 2.2500,
    2.2505, 2.2505, 2.2515, 2.2495, 2.2475,
    2.2445, 2.2455, 2.2470, 2.2500, 2.2495,
    2.2540, 2.2550, 2.2515, 2.2555, 2.2575,
    2.2585, 2.2600, 2.2550, 2.2550, 2.2600,
    2.2630, 2.2720, 2.2710, 2.2675, 2.2700,
    2.2700, 2.2700, 2.2595, 2.2585, 2.2595,
    2.2615, 2.2560, 2.2545, 2.2525, 2.2560,
    2.2550, 2.2545, 2.2550, 2.2530, 2.2540,
];

pub const OPEN_LAST: f64 = 2.2547;
pub const HIGH_LAST: f64 = 2.2660;
pub const LOW_LAST: f64 = 2.2490;
pub const CLOSE_LAST: f64 = 2.2540;

pub static SRC: LazyLock<SRC_T<f64>> = LazyLock::new(||SRC_T::from_iter([
    ("open".to_string(), 2.2547),
    ("high".to_string(), 2.2660),
    ("low".to_string(), 2.2490),
    ("close".to_string(), 2.2540),
]));
pub static SRCS: LazyLock<SRCS_T<f64>> = LazyLock::new(|| SRCS_T::from_iter([
    ("open".to_string(), OPEN.to_vec()),
    ("high".to_string(), HIGH.to_vec()),
    ("low".to_string(), LOW.to_vec()),
    ("close".to_string(), CLOSE.to_vec()),
]));
pub static SRC_VEC: LazyLock<Vec<SRC_T<f64>>> = LazyLock::new(|| (0..50).map(
        |i| SRC_T::from_iter([
        ("open".to_string(), OPEN[i]),
        ("high".to_string(), HIGH[i]),
        ("low".to_string(), LOW[i]),
        ("close".to_string(), CLOSE[i]),
    ])
).collect());